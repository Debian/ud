# defined by nis.schema
attributetype ( 1.3.6.1.1.1.1.2 NAME 'gecos'
    DESC 'The GECOS field; the common name'
    EQUALITY caseIgnoreIA5Match
    SUBSTR caseIgnoreIA5SubstringsMatch
    SYNTAX 1.3.6.1.4.1.1466.115.121.1.26 SINGLE-VALUE
)

# re-defined by ud.schema to support UTF-8
attributetype ( 1.3.6.1.4.1.9586.100.4.2.28 NAME 'gecos'
    DESC 'The GECOS field; the common name'
    EQUALITY caseIgnoreMatch
    SUBSTR caseIgnoreSubstringsMatch
    SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 SINGLE-VALUE
)

# defined by core.schema
objectclass ( 2.5.6.6 NAME 'person'
    DESC 'RFC2256: a person'
    SUP top STRUCTURAL
    MUST ( sn $ cn )
    MAY ( userPassword $ telephoneNumber $ seeAlso $ description )
)

# defined by core.schema
objectclass ( 2.5.6.7 NAME 'organizationalPerson'
    DESC 'RFC2256: an organizational person'
    SUP person STRUCTURAL
    MAY (
        title $ x121Address $ registeredAddress $ destinationIndicator $
        preferredDeliveryMethod $ telexNumber $ teletexTerminalIdentifier $
        telephoneNumber $ internationaliSDNNumber $ facsimileTelephoneNumber $
        street $ postOfficeBox $ postalCode $ postalAddress $
        physicalDeliveryOfficeName $ ou $ st $ l
    )
)

# defined by core.schema
objectclass ( 2.5.6.8 NAME 'organizationalRole'
    DESC 'RFC2256: an organizational role'
    SUP top STRUCTURAL
    MUST cn
    MAY (
        x121Address $ registeredAddress $ destinationIndicator $
        preferredDeliveryMethod $ telexNumber $ teletexTerminalIdentifier $
        telephoneNumber $ internationaliSDNNumber $ facsimileTelephoneNumber $
        seeAlso $ roleOccupant $ preferredDeliveryMethod $ street $
        postOfficeBox $ postalCode $ postalAddress $
        physicalDeliveryOfficeName $ ou $ st $ l $ description
    )
)

# defined by nis.schema
objectclass ( 1.3.6.1.1.1.2.0 NAME 'posixAccount'
    DESC 'Abstraction of an account with POSIX attributes'
    SUP top AUXILIARY
    MUST ( cn $ uid $ uidNumber $ gidNumber $ homeDirectory )
    MAY ( userPassword $ loginShell $ gecos $ description )
)

# defined by nis.schema
objectclass ( 1.3.6.1.1.1.2.1 NAME 'shadowAccount'
    DESC 'Additional attributes for shadow passwords'
    SUP top AUXILIARY
    MUST uid
    MAY (
        userPassword $ shadowLastChange $ shadowMin $
        shadowMax $ shadowWarning $ shadowInactive $
        shadowExpire $ shadowFlag $ description
    )
)

# defined by nis.schema
objectclass ( 1.3.6.1.1.1.2.2 NAME 'posixGroup'
    DESC 'Abstraction of a group of accounts'
    SUP top STRUCTURAL
    MUST ( cn $ gidNumber )
    MAY ( userPassword $ memberUid $ description )
)

# defined by core.schema
objectclass ( 2.16.840.1.113730.3.2.2 NAME 'inetOrgPerson'
    DESC 'RFC2798: Internet Organizational Person'
    SUP organizationalPerson STRUCTURAL
    MAY (
        audio $ businessCategory $ carLicense $ departmentNumber $
        displayName $ employeeNumber $ employeeType $ givenName $
        homePhone $ homePostalAddress $ initials $ jpegPhoto $
        labeledURI $ mail $ manager $ mobile $ o $ pager $ photo $
        roomNumber $ secretary $ uid $ userCertificate $
        x500uniqueIdentifier $ preferredLanguage $
        userSMIMECertificate $ userPKCS12
    )
)

# defined by ud.schema
objectclass ( 1.3.6.1.4.1.9586.100.4.1.1 NAME 'debianAccount'
    DESC 'Abstraction of an account with POSIX attributes and UTF8 support'
    SUP top AUXILIARY
    MUST ( cn $ uid $ uidNumber $ gidNumber )
    MAY (
        userPassword $ loginShell $ gecos $ homeDirectory $
        description $ mailDisableMessage $ sudoPassword $
        webPassword $ rtcPassword
    )
)

# defined by ud.schema
objectclass ( 1.3.6.1.4.1.9586.100.4.1.2 NAME 'debianGroup'
    SUP top STRUCTURAL
    DESC 'attributes used for Debian groups'
    MUST ( gid $ gidNumber)
    MAY ( description $ subGroup $ accountStatus )
)

# defined by ud.schema
objectclass ( 1.3.6.1.4.1.9586.100.4.3.1 NAME 'debianDeveloper'
    DESC 'additional account attributes used by Debian'
    SUP top AUXILIARY
    MUST ( uid $ cn $ sn )
    MAY (
        accountComment $ accountStatus $ activity-from $ activity-pgp $
        allowedHost $ comment $ countryName $ dnsZoneEntry $ emailForward $
        icqUin $ ircNick $ jabberJID $ keyFingerPrint $ latitude $ longitude $
        mn $ onVacation $ privateSub $ sshRSAAuthKey $ supplementaryGid $
        access $ gender $ birthDate $ mailCallout $ mailGreylisting $ mailRBL $
        mailRHSBL $ mailWhitelist $ VoIP $ mailContentInspectionAction $
        bATVToken $ mailDefaultOptions
    )
)

# defined by ud.schema
objectclass ( 1.3.6.1.4.1.9586.100.4.3.2 NAME 'debianServer'
    DESC 'Internet-connected server associated with Debian'
    SUP top STRUCTURAL
    MUST ( host $ hostname )
    MAY (
        c $ access $ admin $ architecture $ bandwidth $ description $
        disk $ distribution $ l $ machine $ memory $ sponsor $
        sponsor-admin $ status $ physicalHost $ ipHostNumber $ dnsTTL $
        sshRSAHostKey $ purpose $ allowedGroups $ exportOptions $
        MXRecord $ sshdistAuthKeysHost
    )
)

# defined by ud.schema
objectclass ( 1.3.6.1.4.1.9586.100.4.3.3 NAME 'debianRoleAccount'
    DESC 'Abstraction of an account with POSIX attributes and UTF8 support'
    SUP account STRUCTURAL
    MAY (
        emailForward $ supplementaryGid $ allowedHost $ labeledURI $
        mailCallout $ mailGreylisting $ mailRBL $ mailRHSBL $
        mailWhitelist $ dnsZoneEntry $ mailContentInspectionAction $
        bATVToken $ mailDefaultOptions
    )
)

# debianDeveloper
#   dn: uid=<uid>,ou=users,dc=debian,dc=org
#   objectClass: top
#   objectClass: inetOrgPerson
#   objectClass: debianAccount
#   objectClass: shadowAccount
#   objectClass: debianDeveloper

# debianRoleAccount
#   dn: uid=<uid>,ou=users,dc=debian,dc=org
#   objectClass: top
#   objectClass: debianAccount
#   objectClass: shadowAccount
#   objectClass: debianRoleAccount

# debianGroup
#   dn: gid=<gid>,ou=users,dc=debian,dc=org
#   objectClass: top
#   objectClass: debianGroup

# debianHost
#  dn: host=<host>,ou=hosts,dc=debian,dc=org
#  objectClass: top
#  objectClass: debianServer

# vim: set ft=slapd ts=4 sw=4 et sm ai si fdm=indent:
